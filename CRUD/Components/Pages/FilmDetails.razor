@page "/film-details"  
@page "/film-details/{id:int}"
@using BlazorCRUD.Model  
@using Interfaces  
@rendermode InteractiveServer
@inject IFilmService FilmService 
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal


<h1 style="text-align: center;">Film Details</h1>
<EditForm Model="@film" FormName="Name">
    <div class="form-wrapper">

        <div class="input-group">
            <InputText @bind-Value="film.Title" id="title" class="input" required />
            <label for="title" class="user-label">Title</label>
        </div>

        <div class="input-group">
            <InputText @bind-Value="film.Director" id="director" class="input" required />
            <label for="director" class="user-label">Director</label>
        </div>

        <div class="input-group">
            <InputText @bind-Value="film.Description" id="description" class="input" required />
            <label for="description" class="user-label">Description</label>
        </div>

        <div class="input-group">
            <InputDate @bind-Value="film.ReleaseDate" id="releaseDate" class="input" required />
            <label for="releaseDate" class="user-label">Release Date</label>
        </div>

        <div class="button-row">
            <input type="button" value="Save" @onclick="SaveFilm" class="btn-custom-save" />
            <input type="button" value="Cancel" @onclick="CancelFilm" class="btn-custom-cancel" />
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    Film film = new Film();

    private void CancelFilm()
    {
        NavigationManager.NavigateTo("/filmlist");
    }

    private async Task SaveFilm()
    {   
        // Show confirmation dialog before saving
        var result = await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "Do you want to save changes?",
            Text = "Make sure all fields are correctly filled.",
            Icon = SweetAlertIcon.Question,
            ShowCancelButton = true,
            ConfirmButtonText = "Yes, save",
            CancelButtonText = "Cancel"
        });
        if (!string.IsNullOrEmpty(result.Value))
        {            
            await FilmService.SaveFilm(film);

            await Swal.FireAsync("Saved!", "The film has been saved successfully.", SweetAlertIcon.Success);

            NavigationManager.NavigateTo("/filmlist");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (id == 0)
        {
            film.ReleaseDate = DateTime.Now;
        }
        else
        {
            film = await FilmService.GetFilmDetails(id);
        }
    }
}