@page "/film-delete/{id:int}"
@using BlazorCRUD.Model
@using Interfaces
@inject IFilmService FilmService
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal

<h1 style="text-align: center;">Film Delete</h1>
<p style="color:red; text-align:center">Are you sure you want to delete this film?</p>


<EditForm Model="@film" FormName="Name">
    <table class="table-custom">
        <tr>
            <td class="label-text">Title:</td>
            <td><InputText @bind-Value="film.Title" placeholder="Title" class="form-control input-left" /></td>
        </tr>
        <tr>
            <td class="label-text">Director:</td>
            <td><InputText @bind-Value="film.Director" placeholder="Director" class="form-control input-left" /></td>
        </tr>
        <tr>
            <td class="label-text">Description:</td>
            <td><InputText @bind-Value="film.Description" placeholder="Description" class="form-control input-left" /></td>
        </tr>
        <tr>
            <td class="label-text">Release Date:</td>
            <td><InputDate @bind-Value="film.ReleaseDate" placeholder="ReleaseDate" class="form-control input-left" /></td>
        </tr>
        <tr>
            <td colspan="2" class="button-row">
                <input type="button" value="Delete" @onclick="DeleteFilm" class="btn-custom-cancel">
                <input type="button" value="Cancel" @onclick="CancelFilm" class="btn-custom-save" />
            </td>
        </tr>

    </table>
</EditForm>


@code {
    [Parameter]
    public int id { get; set; }
    Film film = new Film();

    protected async Task DeleteFilm()
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "Are you sure?",
            Text = "This action cannot be undone!",
            Icon = SweetAlertIcon.Warning,
            ShowCancelButton = true,
            ConfirmButtonText = "Yes, delete it",
            CancelButtonText = "Cancel"
        });

        if (!string.IsNullOrEmpty(result.Value))
        {
            await FilmService.DeleteFilm(id);
            await Swal.FireAsync("Deleted!", "The film has been successfully deleted.", SweetAlertIcon.Success);
            NavigationManager.NavigateTo("/filmlist");
        }
    }

     private void CancelFilm()
    {
        NavigationManager.NavigateTo("/filmlist");
    }

    protected override async Task OnInitializedAsync()
    {
            film = await FilmService.GetFilmDetails(id);
    }

}
